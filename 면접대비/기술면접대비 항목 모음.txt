지민

지민이형 깃허브 테스트!

1. 가비지 컬렉션은 자바의 메모리 관리 방법 중의 하나로 JVM의 Heap 영역에서 동적으로 
    할당했던 메모리 영역 중 필요 없게 된 메모리 영역을 주기적으로 삭제하는 프로세스를 말합니다.

2. 자바의 기본형 타입 
   정수형 타입 : byte(1byte), short(2byte), int(4byte), long(8byte)
   실수형 타입 : float(4byte), double(8byte)
   문자형 타입 : char(2byte)
   논리 타입: boolean(1byte)

3. 자바의 참조형 타입
   배열(array[])
   열거(enum)
   클래스(class)
   인터페이스(interface)

4. 객체 지향 프로그래밍 ( OOP )
   OOP는 객체의 관점에서 프로그래밍 하는 것을 의미합니다.
   C언어를 절차 지향 프로그래밍이라 하는데, 
   절차 지향 프로그래밍은 프로세스가 함수 단위로 순서대로 진행되는 것을 말합니다.

5. 캡슐화의 정의를 보면 필요한 속성(Attribute) 와 행위(Method) 를 하나로 묶고
   그중 일부를 외부에서 사용하지 못하도록 은닉한다

6. 다형성(polymorphism)이란 하나의 객체가 여러 가지 타입을 가질 수 있는 것을 의미합니다.
   자바에서는 이러한 다형성을 부모 클래스 타입의 참조 변수로 자식 클래스 타입의 인스턴스를 
   참조할 수 있도록 하여 구현하고 있습니다.
   다형성은 상속, 추상화와 더불어 객체 지향 프로그래밍을 구성하는 중요한 특징 중 하나입니다.

   동적 바인딩(Dynamic Binding)
   다형성을 사용하여 메소드를 호출할 때, 발생하는 현상이다.
   실행 시간(Runtime) 즉, 파일을 실행하는 시점에 성격이 결정된다.
   실제 참조하는 객체는 서브 클래스이니 서브 클래스의 메소드를 호출한다.

7. 상속이란 기존 클래스의 변수와 메소드를 물려 받아 새로운 클래스(더 나은, 더 구체적인 클래스)를 
   구성하는 것을 의미합니다. 이러한 상속은 캡슐화, 추상화, 다형성과 더불어 객체지향프로그래밍을 
   구성하는 특징 중 하나입니다.

8. 상속을 사용하면 기능 추가/변경시에 예외나 버그가 발생하게 되면 어디에서 발생한지 예측을 하기가 힘들다. 
   상속 구조가 복잡하면 더욱 예측하기 힘들어진다.
   불필요한 기능을 원치 않는다 해도 상속해야한다.
   캡슐화 원칙을 위반한다.

9. 클래스(Class) 란
   객체를 만들어 내기 위한 설계도 혹은 틀
   연관되어 있는 변수와 메서드의 집합

   인스턴스(Instance)란
   설계도를 바탕으로 소프트웨어 세계에 구현된 구체적인 실체
   즉, 객체를 소프트웨어에 실체화 하면 그것을 ‘인스턴스’라고 부른다.
   실체화된 인스턴스는 메모리에 할당된다.


재환
10. thread란 무엇이고 thread를 구현하기 위한 인터페이스, 클래스는 어떤 것이 있나요?
프로세스는 프로그램을 수행하는 데 필요한 데이터와 메모리 등의 자원 그리고 쓰레드로 구성되어 있다.
프로세스의 자원을 이용해서 실제로 작업을 수행하는 것이 바로 쓰레드이다.
상속해서 쓰려면 Thread Class 를 상속받으면 된다.
구현해서 쓰려면 Runnable 인터페이스를 구현하면 된다.

11. static 키워드에 대해 설명하세요.
static은 변수나 메소드에 키워드로 사용된다.
static 키워드를 사용한 변수는 클래스가 메모리에 올라갈 때 자동으로 생성이 된다. 즉, 인스턴스(객체) 생성 없이 바로 사용가능 하다. 
그러므로, 객체를 생성하지 않아도 되니까 편리하고 속도도 빠르다.
인스턴스 생성 없이 바로 사용가능 하기 때문에 프로그램 내에서 공통으로 사용되는 데이터들을 관리 할 때 이용한다.

12. 오버로딩과 오버라이딩의 차이점에 대해 말해보세요.
오버라이딩(Overriding): 상위 클래스가 가지고 있는 메소드를 하위 클래스에서 재정의하여 사용하는 기술
오버로딩(Overloading): 매개변수의 타입과 개수를 변경하면서 같은 이름의 메소드를 여러 개 사용하는 기술

오버로딩(Overloading)은 기존에 없던 새로운 메서드를 정의하는 것이고,
오버라이딩(Overriding)은 상속 받은 메서드의 내용만 변경 하는 것이다.

13. 추상클래스와 인터페이스에 대해 설명하세요.
<추상클래스>
단일 상속만이 가능하다.
모든 접근 제어자를 사용할 수 있다.
변수와 상수를 선언할 수 있다.
추상 메소드와 일반 메소드를 선언할 수 있다.
<인터페이스>
다중 구현이 가능하다.
public 접근 제어자만 사용할 수 있다.
상수만 선언할 수 있다.
추상메소드만 선언할 수 있다.

14. 제네릭이란 무엇인가요?
제네릭은 generic 타입 및 메소드를 정의하고 사용 할 수 있는 언어적 특성입니다.
제네릭 타입은 파라미터 타입에 실제 타입 변수가 제공되면 인스턴스화 됩니다.
제네릭 타입을 사용함으로써 잘못된 타입이 사용될 수 있는 문제를 컴파일 과정에서 제거할 수 있기 때문에 사용합니다.

15. 배열과 ArrayList의 차이점은 무엇인가요?
<배열>
배열의 크기는 한번 정하면, 크기를 변경을 할 수 없습니다.
Info[ ] infoArr = new Info[5]
배열 초기화시 메모리에 할당되어 ArrayList보다 속도가 빠릅니다.
<ArrayList>
ArrayList는 크기가 가변적입니다.
저장하는 데이터 수에 따라서 크기가 변경됩니다.
데이터 추가는 add( ), 삭제는 remover( )를 사용합니다.
데이터 추가 삭제시 메모리를 재할당하기 때문에 속도가 배열보다 느립니다.

16. 스택과 링크드리스트와 리스트의 차이점을 설명해보세요.
스택 : 제일 마지막에 들어간 것이 제일 먼저 나오는 구조의 자료구조입니다. 값을 넣는 Push 와 값을 빼는 Pop 으로 이루어져 있습니다.
링크드리스트 : LinkedList는 엘리먼트와 엘리먼트 간의 연결(Link)을 통해서 리스트를 구현한 자료구조입니다.
리스트 : ArrayList는 기본적으로 배열을 사용한다. 하지만 일반 배열과 차이점이 존재한다.
일반 배열은 처음에 메모리를 할당할 때 크기를 지정해주어야 하지만,
ArrayList는 크기를 지정하지 않고 동적으로 값을 삽입하고 삭제할 수 있다

결론 : 
조회시에는 ArrayList가 우위에 있지만,
삽입/삭제 시에는 LinkedList가 뛰어난 성능을 보여준다
소량의 데이터를 가지고 사용할 때는 사실 큰 차이가 없지만,
정적인 데이터를 활용하면서 조회가 빈번하다면 ArrayList를 사용하는 것이 좋고,
동적으로 추가/삭제 요구사항이 빈번하다면 LinkedList를 사용하는 것이 좋다.

요약 : 순차적으로  추가/삭제하는  경우  ArrayList가  LinkedList보다  빠르다.
중간  데이터(비 순차적)를  추가/삭제하는  경우  LinkedList가  ArrayList보다  빠르다.

17. 자바 컬렉션프레임워크의 대표 인터페이스는 무엇이 있나요?
데이터를 저장하는 자료 구조와 데이터를 처리하는 알고리즘을 구조화하여 클래스로 구현해 놓은 컬렉션프레임워크에는
List 인터페이스와 Set 인터페이스와 Map 인터페이스가 있습니다. 
이 중에서 List와 Set 인터페이스는 모두 Collection 인터페이스를 상속받지만, 구조상의 차이로 인해 Map 인터페이스는 별도로 정의됩니다.

18. 접근제어자의 종류와 특성에 대해 설명하세요 (private, default, protected, public)
접근제어자가 private으로 설정되었다면 private 이 붙은 변수, 메소드는 해당 클래스에서만 접근이 가능하다.
접근 제어자를 별도로 설정하지 않는다면 접근 제어자가 없는 변수, 메소드는 default 접근 제어자가 되어 해당 패키지 내에서만 접근이 가능하다.
접근제어자가 protected로 설정되었다면 protected가 붙은 변수, 메소드는 동일 패키지의 클래스 또는 해당 클래스를 상속받은 다른 패키지의 클래스에서만 접근이 가능하다.
접근제어자가 public으로 설정되었다면 public 접근제어자가 붙은 변수, 메소드는 어떤 클래스에서라도 접근이 가능하다.

19. hashCode( ) 값이 모두 같다면 어떤 일이 벌어지나요? (보완필요★)
hashCode는 일반적으로 각 객체의 주소값을 변환하여 생성한 객체의 고유한 정수값이다. 따라서 두 객체가 동일객체인지 비교할 때 사용할 수 있다.
서로 다른 객체의 hashCode가 같다면 중복 key가 되는 것이다. Map의 기본 특징으로 key는 중복이 될 수 없다.





영찬


상완
7. Servlet이란 무엇인가요?
서블릿이란 동적 웹 페이지를 만들때 사용되는 자바 기반의 웹 애플리케이션 프로그래밍 기술을 말합니다. 서블릿은 웹 요청과 응답의 흐름을 간단한 메소드 호출만으로 체계적으로 다룰 수 있게 해줍니다.
서블릿의 특징으로는 html을 사용하여 요청에 응답하고, JavaThread를 이용하여 동작합니다. 그리고 MVC 패턴에서 Controller로 이용되어지는 특징을 가지고 있습니다.

8.Ajax란 무엇인가요?
Asychronous Javascript and xml의 약자로 자바스크립트를 사용한 비동기 통신기술로서, 전체 페이지를 새로 고치지 않고도 페이지의 일부분만 데이터를 로드하는 기법을 말합니다. 

9.RestFUL은 무엇이라고 생가하시나요?
RESTFUL이란 REST의 원리를 따르는 시스템을 의미합니다. 여기서 Rest란 자원의 표현을 통해서  정보를 주고 받는것을 말하며,
자원을 URI로, 행위에 맞는 적절한 Http method를 사용한것이 Restful 한 메소드 입니다. Restful 하지 않은 메소드를 예를 들자면
CRUD기능을 모두 POST로만 처리한것이 RESTful하지 메소드라고 할수 있습니다.

9-1.Rest란 자원의 표현을 통해서 자원의 정보를 주고 받는것을 의미합니다.
여기서 자원의 표현이란 URI를 자원으로 명시하고 자원에 대한 행위를 HTTP Method를 통해 해당 자원의 대한 CRUD Operation(POST,GET,UPDATE,DELETE)을 적용하는것을 의미합니다.

10. 세션과 쿠키의 차이점은 무엇인가요?
Http 프로트콜은 상태와 연결에 대한 정보를 저장하지 않는데 이를 도와주는것이 쿠키와 세션입니다.
쿠키는 사용자 정보가 텍스트 파일 형태로 브라우저에 저장되면서 통신할때 Header에 포함되어 전송되는데 http 통신중에 쿠키 정보가 노출될 수 있기 때문에 보안의 취약하다는 특징이 있습니다.

세션은 사용자의 정보를 서버에 저장하는데 브라우저가 종료될때까지 유지됩니다. 그리고 서버에 저장되기 때문에 보안이 강하다는 특징을 가지고 있습니다.

11.GET/POST 전송방식의 특징을 말해주세요
GET방식은 URI끝에 파라미터를 붙여 전송해주는 방식으로 전송속도는 POST 방식 보다 빠르며, 전송데이터 사이즈에 제한이 있고 보안에 취약합니다.
POST 방식은 파라미터 값을 헤더에 숨겨서 보내기때문에 보안에 강하고 전송데이터 사이즈 제한이 없어 이미지나 파일 전송에 용이합니다.

12. Jquery를 사용한 후 느낀점은 무엇인가요?
 제이 쿼리는 웹 사이트의 자바스크립트를 더욱 손쉽게 활용할수 있게 해주는데 짧고 단순한 코드로도 웹페이지에 다양한 효과나 연출을 적용할 수 있도록 해줍니다. 자바스크립트에 비해 짧고 간결하게 쓸 수 있다는점에서 개발속도도 향상되고 사용하기도 편했습니다.

1.스프링 프레임 워크의 특징에 관해 설명해주세요
스프링 프레임 워크는 자바의 오픈소스 애플리케이션 프레임워크 중 하나로 특정한 기술의 종속적이지 않고 객체를 관리할 수 있는 컨테이너를 제공해줍니다. 컨테이너로 객체를 관리하면서 의존성 주입과 제어의 역전을 통해 결합도를 낮춰주며 AOP를 지원하여 비지니스 코드에만 집중해서 개발할수 있다는 장점이 있습니다.

2.Di란 무엇인가요?
Dependency Injection의 약자로 의존성 주입을 의미합니다. 객체관의 의존 관계를 설정해주면 스프링 프레임워크에서 자동으로 연결해주는데 이렇게 되면 직접 의존하는 객체를 생성하거나 검색해서 가져올 필요가 없어서 결합도가 낮아지는 장점이 있습니다.

3.자동을 DI해주는 어노테이션은 어떤것들이 있나요?
@Autowried와 @RequiredArgsConstructor 등이 있습니다.

4.AOP란 무엇이고 어드바이스 종류를 말해주세요
관점지향 프로그래밍을 말합니다. 대부분 프로젝트은 고유한 기능외에 트랜잭션, 보안처리, 로깅등의 공통기능을 포함해야하는데 AOP는 어플리케이션의 기능을 핵심기능과 공통 기능을 분리하여 공투분을 적절히 끼워 넣는 방식을 말합니다. 어드바이스의 종류로는 Before Advice, After Returning Advice, After Throwing Advice, After Advice,Around Advice 이렇게 5개가 존재합니다.

영훈
5. springMVC동작방식을 설명해 주세요


1. DispatcherServlet이 브라우저로부터 요청을 받는다.
2. DispatcherServlet은 요청된 URL을 HandlerMapping 객체에 넘기고, 호출해야 할 Controller 메소드(핸들러) 정보를 얻는다.
3. DispatcherServlet이 HandlerAdapter 객체를 가져온다. 
4. HandlerAdapter 객체의 메소드를 실행한다. 
※ 보다 정확하게 표현한다면, HandlerMapping은 DispatcherServlet로부터 전달된 URL을 바탕으로 HandlerAdapter 객체를 포함하는 HandlerExecutionChain 객체를 생성하며, 이후 DispatcherServlet이 HandlerExecutionChain 객체로부터 HandlerAdapter 객체를 가져와서 해당 메소드를 실행하게 된다.
5. Controller 객체는 비즈니스 로직을 처리하고, 그 결과를 바탕으로 뷰(ex. JSP)에 전달할 객체를 Model 객체에 저장한다. DispatcherServlet에게 view name을 리턴한다.
6. DispatcherServlet은 view name을 View Resolver에게 전달하여 View 객체를 얻는다.
7. DispatcherServlet은 View 객체에 화면 표시를 의뢰한다.
8. View 객체는 해당하는 뷰(ex. JSP, Thymeleaf)를 호출하며, 뷰는 Model 객체에서 화면 표시에 필요한 객체를 가져와 화면 표시를 처리한다.


[Oracle DB]
1. 데이터베이스란 무엇이고 장단점은 무엇인가요?
데이터베이스에서 데이터는 일반적으로 처리 및 데이터 쿼리를 효율적으로 수행하기 위해 일련의 테이블에서 행과 열로 모델링됩니다. 그러면 데이터에 쉽게 액세스하고 관리, 수정, 업데이트, 제어 및 구성할 수 있습니다. 대부분의 데이터베이스는 데이터 작성 및 쿼리에 SQL(Structured Query Language)을 사용

2. sql에 대해 설명해주세요
SQL은 데이터를 쿼리, 조작 및 정의하고 액세스 제어를 제공하기 위해 거의 모든 관계형 데이터베이스에서 사용되는 프로그래밍 언어입니다


3. DDL, DML, DCL의 역할과 구문 예를 들어 설명하세요

DDL, 데이터 정의어 : CREATE(생성), ALTER(변경), DROP(제거)
DML, 데이터 조작어 : 데이터 삽입(insert)/수정(update)/삭제(delete)
DCL, 데이터 제어문 : GRANT, REVOKE(사용자 관리/권한 주기 등등)


4. 트랜잭션이란 무엇인가요?
TCL, 트랜잭션 : commit, rollback
데이터 조작어에 대한 최종 결과를 영구 저장 또는 저장 취소 하기 위하여 필요한 언어


5. 기본키와 외래키에 대해 설명해주세요.

기본 키(Primary Key)란 
각각의 행(레코드)을 구별하기 위한 컬럼/필드를 말합니다.

특징 : 
- not null 조건과 unique 조건이 합쳐진 것,
- 내부적으로 검색 기능의 향상을 위하여 인덱스(index)가 생성됨


외래 키(foreign key)란
부모 테이블의 기본 키를 참조하는 서브 테이블의 컬럼에 부여되는 키를 의미함.

6. where와 having의 차이점
select 절에 대한 조건절은 where 절인 반면에, group by절에 대한 조건절은 having 절임.


7. Group by란 무엇인가요?

Group by : 
데이터를 그룹핑하여 좀더 작은 그룹으로 나눌 때 사용함.
엑셀의 부분 합/평균 등의 기능과 동일한 개념임.


8. Inner join과 outer join의 차이점에 대해 설명하세요

inner join : 조인 조건을 만족하는 행만 표시함.

outer join : 조인 조건에 만족하지 않는 행도 추출됨.





9. 제약조건은 어떤 것이 있는지 말해보세요

제약 조건이란
데이터에 대한 정확성을 유지하기 위하여 원하지 않는 데이터가 입력/수정되는 것을 방지하기 위한 제약입니다.

제약조건의 목적
- 사용자로 하여금 잘못된 데이터를 입력하지 못하도록 하기 위함.
- 원치 않는 데이터를 수정하지 못하도록 사전에 테이블을 제한 사항을 두기 위함.

5가지 제약조건
- not null : 컬럼에 null 값을 허용하지 않으므로, 반드시 입력해야 하는 컬럼을 의미합니다.
- unique : 중복된 데이터의 입력을 허용하지 않는 조건으로, 널 값은 고려 대상이 아닙니다. 내부적으로 인덱스(index)가 생성이 됩니다.
- primary key : not null 조건과 unique 조건이 합쳐진 것입니다. 내부적으로 검색 기능의 향상을 위하여 인덱스(index)가 생성이 됩니다.
- foreign key : 부모 테이블의 기본 키를 참조하는 서브 테이블의 컬럼에 부여되는 키를 의미합니다.
- check : 저장 가능한 값의 범위 또는 조건을 지정하여 설정 값만 허용하기 위한 제약 조건입니다.
예를 들어 '급여 컬럼은 항상 0 이상입니다.', '성별 컬럼은 [남] 또는 [여]의 값 중에 하나가 입력이 될 수 있습니다.'



